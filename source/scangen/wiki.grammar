# Comments start with '#'.
# White-space lines are ignored.
# Columns are:
#   [ID] [TOKEN_NAME] /[REGEX]/
#   ID is the numerical value to use for the token.
#   TOKEN_NAME is the symbollic name used to refer to the token in rules.
#   REGEX is a regular expression indicating what characters the token matches.
# Text is matched in single line mode, so ^ is start of file, and newlines
# are in the input.
#   * Use (^|[\n\r]+) for start of line or input.
#   * use ($|[\n\r]+) for end of line or file.
# Rules are evaluated from top to bottom, so put your generic catch-all tokens
# at the bottom of the list!

EMPTY_LINE         /^$/
END_LINE           /$/
LEVEL_OPEN         /^==+/
LEVEL_CLOSE        /==+$/
BOLD_ITALIC        /'''''/
BOLD               /'''/
ITALIC             /''/
HORIZONTAL_RULE    /^----+/
TAG_OPEN           /<(\w+)>/
TAG_CLOSE          /</(\w+)>/
BULLET_LIST        /^\*+/
NUMBER_LIST        /^#+/
LINK               /\[(\S+)\s*([^\]]*)\]/
TEXT               /[^='<\[]+|=+/

= Productions =

# A grammar for wiki formats:
# { } = optional
# e.g.
#   statement_list => statement {statement}
# becomes
#   statement_list => statement statement_tail
#   statement_tail => LAMBDA
#   statement_tail => statement statement_tail
# 
# Special tokens introduced into grammar:
#   LAMBDA => An empty production, matches even for no input.
#   TOKEN_EOF
# 
# Scanning should proceed line at a time.
# Token contains string start/end position.
# We use custom format to indicate flags between square brackets '[' and ']'.

START => wiki STOP
wiki => statement_list

#statement_list => statement {statement}
statement_list => statement statement_list_tail
statement_list_tail =>
statement_list_tail => statement statement_list_tail

statement => LEVEL_OPEN statement2_list LEVEL_CLOSE END_LINE
statement => EMPTY_LINE
statement => BULLET_LIST statement2_list END_LINE
statement => NUMBER_LIST statement2_list END_LINE
statement => statement2_list

#statement2_list => statement2 {statement2}
statement2_list => statement2_list_tail
statement2_list_tail => END_LINE
statement2_list_tail => statement2 statement2_list_tail

statement2 => LINK
statement2 => TAG_OPEN statement TAG_CLOSE
statement2 => TEXT
statement2 => statement3

statement3 => BOLD_ITALIC TEXT BOLD_ITALIC
statement3 => BOLD TEXT BOLD
statement3 => ITALIC TEXT ITALIC
